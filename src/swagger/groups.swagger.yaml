openapi: 3.0.0
info:
  title: Group Management API
  version: 1.0.0
  description: API for managing groups, including creating, updating, and managing members.

servers:
  - url: http://localhost:3000/api
    description: Local development server

tags:
  - name: Groups
    description: Operations related to groups

paths:
  /groups:
    post:
      tags:
        - Groups
      summary: Create a new group
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the group
                  example: "Friends' Trip"
                type:
                  type: string
                  description: Type of the group (e.g., personal, travel)
                  example: travel
                profile_image_url:
                  type: string
                  description: Profile image URL for the group
                  example: 'https://example.com/group-profile.png'
      responses:
        201:
          description: Group created successfully
          content:
            application/json:
              schema:

        400:
          description: Bad request
        500:
          description: Internal server error
    get:
      tags:
        - Groups
      summary: Get all groups for the authenticated user
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          description: Page number for pagination
          example: 1
        - name: limit
          in: query
          schema:
            type: integer
          description: Number of results per page
          example: 10
      responses:
        200:
          description: List of groups
          content:
            application/json:
              schema:
                type: array
                items:

        500:
          description: Internal server error

  /groups/{id}:
    put:
      tags:
        - Groups
      summary: Update a group
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the group to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the group
                  example: 'Work Project'
                type:
                  type: string
                  description: Type of the group
                  example: work
                profile_image_url:
                  type: string
                  description: New profile image URL
                  example: 'https://example.com/updated-profile.png'
      responses:
        200:
          description: Group updated successfully
          content:
            application/json:
              schema:

        403:
          description: Not authorized
        404:
          description: Group not found
        500:
          description: Internal server error
    delete:
      tags:
        - Groups
      summary: Delete a group
      security:
        - bearerAuth: []
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the group to delete
      responses:
        200:
          description: Group deleted successfully
        403:
          description: Not authorized
        404:
          description: Group not found
        500:
          description: Internal server error

  /groups/{id}/add-member:
    post:
      tags:
        - Groups
      summary: Add a member to a group
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: ID of the user to add
                  example: '123'
                isAdmin:
                  type: boolean
                  description: Whether the user should be an admin
                  example: false
      responses:
        201:
          description: User added to the group successfully
        400:
          description: Bad request
        404:
          description: Group or user not found
        500:
          description: Internal server error

  /groups/{id}/leave:
    post:
      tags:
        - Groups
      summary: Leave a group
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the group to leave
      responses:
        200:
          description: Successfully left the group
        404:
          description: Group or user not found
        500:
          description: Internal server error

  /groups/{id}/users/{userId}:
    delete:
      tags:
        - Groups
      summary: Remove a user from a group
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the group
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the user to remove
      responses:
        200:
          description: User removed from the group successfully
        404:
          description: Group or user not found
        500:
          description: Internal server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    uuid:
      type: string
      pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      minLength: 36
      maxLength: 36
