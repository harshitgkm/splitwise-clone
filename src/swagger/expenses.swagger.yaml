openapi: 3.0.1
info:
  title: Expense Management API
  version: 1.0.0
  description: API for managing expenses in a group
servers:
  - url: http://localhost:3000/api
    description: Local server

paths:
  /expenses:
    post:
      summary: Create an expense
      description: Create a new expense within a group.
      tags:
        - Expenses
      security:
        - bearerAuth: []
      requestBody:
        description: Expense details to create the expense
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  format: float
                description:
                  type: string
                splitType:
                  type: string
                  enum:
                    - EQUALLY
                    - UNEQUAL
                    - PERCENTAGE
                    - SHARES
                users:
                  type: array
                  items:
                    type: object
                    properties:
                      userId:
                        type: integer
                      amountPaid:
                        type: number
                        format: float
                      amountOwed:
                        type: number
                        format: float
                      percentage:
                        type: number
                        format: float
                      shares:
                        type: integer
      responses:
        201:
          description: Expense created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
        400:
          description: Bad Request. Invalid input.
        401:
          $ref: '#/components/responses/UnauthorizedError'

    get:
      summary: Get all expenses for a group
      description: Retrieve all expenses for the specified group.
      tags:
        - Expenses
      security:
        - bearerAuth: []
      parameters:
        - name: groupId
          in: query
          description: The ID of the group for which expenses are to be retrieved
          required: true
          schema:
            type: integer
      responses:
        200:
          description: List of expenses
          content:
            application/json:
              type: array
              items:
                $ref: '#/components/schemas/Expense'
        401:
          $ref: '#/components/responses/UnauthorizedError'

  /expenses/{expenseId}:
    get:
      summary: Get details of a specific expense
      description: Retrieve details of a specific expense by its ID.
      tags:
        - Expenses
      security:
        - bearerAuth: []
      parameters:
        - name: expenseId
          in: path
          description: The ID of the expense to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Expense details
          content:
            application/json:
              $ref: '#/components/schemas/Expense'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: Expense not found

    put:
      summary: Update an expense
      description: Update the details of an existing expense.
      tags:
        - Expenses
      security:
        - bearerAuth: []
      parameters:
        - name: expenseId
          in: path
          description: The ID of the expense to update
          required: true
          schema:
            type: integer
      requestBody:
        description: Fields to update for the expense
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                amount:
                  type: number
                  format: float
                expense_image_url:
                  type: string
      responses:
        200:
          description: Expense updated successfully
          content:
            application/json:
              $ref: '#/components/schemas/Expense'
        400:
          description: Bad Request. Invalid input.
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: Expense not found

    delete:
      summary: Delete an expense
      description: Delete an existing expense by its ID.
      tags:
        - Expenses
      security:
        - bearerAuth: []
      parameters:
        - name: expenseId
          in: path
          description: The ID of the expense to delete
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Expense deleted successfully
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: Expense not found

  /expenses/{expenseId}/settle-up:
    post:
      summary: Settle an expense between users
      description: Settle an amount between users for a specific expense.
      tags:
        - Expenses
      security:
        - bearerAuth: []
      parameters:
        - name: expenseId
          in: path
          description: The ID of the expense to settle
          required: true
          schema:
            type: integer
      requestBody:
        description: Payment details to settle the expense
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payerId:
                  type: integer
                payeeId:
                  type: integer
                amount:
                  type: number
                  format: float
                groupId:
                  type: integer
      responses:
        200:
          description: Expense settled successfully
          content:
            application/json:
              type: object
              properties:
                payerId:
                  type: integer
                payeeId:
                  type: integer
                newPayerBalance:
                  type: number
                  format: float
                payment:
                  type: object
                  properties:
                    id:
                      type: integer
                    payer_id:
                      type: integer
                    payee_id:
                      type: integer
                    amount:
                      type: number
                      format: float
                    group_id:
                      type: integer
        400:
          description: Bad Request. Invalid input.
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: Expense or user not found

  /expenses/{expenseId}/comments:
    post:
      summary: Create a comment for an expense
      description: Add a comment to an expense.
      tags:
        - Expenses
      security:
        - bearerAuth: []
      parameters:
        - name: expenseId
          in: path
          description: The ID of the expense to comment on
          required: true
          schema:
            type: integer
      requestBody:
        description: The content of the comment
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
      responses:
        201:
          description: Comment created successfully
          content:
            application/json:
              $ref: '#/components/schemas/Comment'
        400:
          description: Bad Request. Invalid input.
        401:
          $ref: '#/components/responses/UnauthorizedError'

    get:
      summary: Get all comments for an expense
      description: Retrieve all comments for a specific expense.
      tags:
        - Expenses
      security:
        - bearerAuth: []
      parameters:
        - name: expenseId
          in: path
          description: The ID of the expense to get comments for
          required: true
          schema:
            type: integer
      responses:
        200:
          description: List of comments
          content:
            application/json:
              type: array
              items:
                $ref: '#/components/schemas/Comment'
        401:
          $ref: '#/components/responses/UnauthorizedError'

  /expenses/{expenseId}/comments/{commentId}:
    put:
      summary: Update a comment
      description: Update an existing comment for an expense.
      tags:
        - Expenses
      security:
        - bearerAuth: []
      parameters:
        - name: expenseId
          in: path
          description: The ID of the expense the comment belongs to
          required: true
          schema:
            type: integer
        - name: commentId
          in: path
          description: The ID of the comment to update
          required: true
          schema:
            type: integer
      requestBody:
        description: Updated content for the comment
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
      responses:
        200:
          description: Comment updated successfully
          content:
            application/json:
              $ref: '#/components/schemas/Comment'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: Comment or expense not found

    delete:
      summary: Delete a comment
      description: Delete an existing comment for an expense.
      tags:
        - Expenses
      security:
        - bearerAuth: []
      parameters:
        - name: expenseId
          in: path
          description: The ID of the expense the comment belongs to
          required: true
          schema:
            type: integer
        - name: commentId
          in: path
          description: The ID of the comment to delete
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Comment deleted successfully
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: Comment or expense not found.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
